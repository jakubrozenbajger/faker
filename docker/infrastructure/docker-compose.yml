version: '3.1'

services:
  zookeeper:
    image: wurstmeister/zookeeper
    container_name: faker_zookeeper
    ports:
    - 2181:2181
    networks:
      infastructure_net:
        ipv4_address: 10.1.1.20

  kafka:
    image: wurstmeister/kafka
    container_name: faker_kafka
    ports:
    - 9092:9092
    environment:
      KAFKA_ADVERTISED_HOST_NAME: 127.0.0.1
      KAFKA_CREATE_TOPICS: "test:1:1"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
    volumes:
    - /var/run/docker.sock:/var/run/docker.sock
    networks:
      infastructure_net:
        ipv4_address: 10.1.1.21

  mongo:
    image: mongo
    restart: always
    container_name: faker_mongo
    volumes:
        - './data:/data/db'
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: pass
    networks:
      infastructure_net:
        ipv4_address: 10.1.1.10

  mongo_express:
    image: mongo-express
    restart: always
    container_name: faker_mongo_express
    ports:
    - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: pass
    networks:
      infastructure_net:
        ipv4_address: 10.1.1.11

networks:
  infastructure_net:
    driver: bridge
    ipam:
      driver: default
      config:
      - subnet: 10.1.1.0/24
